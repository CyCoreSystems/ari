// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/CyCoreSystems/ari (interfaces: Playback)

package mock

import (
	ari "github.com/CyCoreSystems/ari"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Playback interface
type MockPlayback struct {
	ctrl     *gomock.Controller
	recorder *_MockPlaybackRecorder
}

// Recorder for MockPlayback (not exported)
type _MockPlaybackRecorder struct {
	mock *MockPlayback
}

func NewMockPlayback(ctrl *gomock.Controller) *MockPlayback {
	mock := &MockPlayback{ctrl: ctrl}
	mock.recorder = &_MockPlaybackRecorder{mock}
	return mock
}

func (_m *MockPlayback) EXPECT() *_MockPlaybackRecorder {
	return _m.recorder
}

func (_m *MockPlayback) Control(_param0 string, _param1 string) error {
	ret := _m.ctrl.Call(_m, "Control", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPlaybackRecorder) Control(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Control", arg0, arg1)
}

func (_m *MockPlayback) Data(_param0 string) (ari.PlaybackData, error) {
	ret := _m.ctrl.Call(_m, "Data", _param0)
	ret0, _ := ret[0].(ari.PlaybackData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPlaybackRecorder) Data(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Data", arg0)
}

func (_m *MockPlayback) Get(_param0 string) *ari.PlaybackHandle {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].(*ari.PlaybackHandle)
	return ret0
}

func (_mr *_MockPlaybackRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockPlayback) Stop(_param0 string) error {
	ret := _m.ctrl.Call(_m, "Stop", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPlaybackRecorder) Stop(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Stop", arg0)
}
