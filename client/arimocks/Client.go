// Code generated by mockery v1.0.0. DO NOT EDIT.

package arimocks

import (
	ari "github.com/CyCoreSystems/ari/v6"
	mock "github.com/stretchr/testify/mock"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Application provides a mock function with given fields:
func (_m *Client) Application() ari.Application {
	ret := _m.Called()

	var r0 ari.Application
	if rf, ok := ret.Get(0).(func() ari.Application); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ari.Application)
		}
	}

	return r0
}

// ApplicationName provides a mock function with given fields:
func (_m *Client) ApplicationName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Asterisk provides a mock function with given fields:
func (_m *Client) Asterisk() ari.Asterisk {
	ret := _m.Called()

	var r0 ari.Asterisk
	if rf, ok := ret.Get(0).(func() ari.Asterisk); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ari.Asterisk)
		}
	}

	return r0
}

// Bridge provides a mock function with given fields:
func (_m *Client) Bridge() ari.Bridge {
	ret := _m.Called()

	var r0 ari.Bridge
	if rf, ok := ret.Get(0).(func() ari.Bridge); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ari.Bridge)
		}
	}

	return r0
}

// Bus provides a mock function with given fields:
func (_m *Client) Bus() ari.Bus {
	ret := _m.Called()

	var r0 ari.Bus
	if rf, ok := ret.Get(0).(func() ari.Bus); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ari.Bus)
		}
	}

	return r0
}

// Channel provides a mock function with given fields:
func (_m *Client) Channel() ari.Channel {
	ret := _m.Called()

	var r0 ari.Channel
	if rf, ok := ret.Get(0).(func() ari.Channel); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ari.Channel)
		}
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *Client) Close() {
	_m.Called()
}

// Connected provides a mock function with given fields:
func (_m *Client) Connected() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// DeviceState provides a mock function with given fields:
func (_m *Client) DeviceState() ari.DeviceState {
	ret := _m.Called()

	var r0 ari.DeviceState
	if rf, ok := ret.Get(0).(func() ari.DeviceState); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ari.DeviceState)
		}
	}

	return r0
}

// Endpoint provides a mock function with given fields:
func (_m *Client) Endpoint() ari.Endpoint {
	ret := _m.Called()

	var r0 ari.Endpoint
	if rf, ok := ret.Get(0).(func() ari.Endpoint); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ari.Endpoint)
		}
	}

	return r0
}

// LiveRecording provides a mock function with given fields:
func (_m *Client) LiveRecording() ari.LiveRecording {
	ret := _m.Called()

	var r0 ari.LiveRecording
	if rf, ok := ret.Get(0).(func() ari.LiveRecording); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ari.LiveRecording)
		}
	}

	return r0
}

// Mailbox provides a mock function with given fields:
func (_m *Client) Mailbox() ari.Mailbox {
	ret := _m.Called()

	var r0 ari.Mailbox
	if rf, ok := ret.Get(0).(func() ari.Mailbox); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ari.Mailbox)
		}
	}

	return r0
}

// Playback provides a mock function with given fields:
func (_m *Client) Playback() ari.Playback {
	ret := _m.Called()

	var r0 ari.Playback
	if rf, ok := ret.Get(0).(func() ari.Playback); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ari.Playback)
		}
	}

	return r0
}

// Sound provides a mock function with given fields:
func (_m *Client) Sound() ari.Sound {
	ret := _m.Called()

	var r0 ari.Sound
	if rf, ok := ret.Get(0).(func() ari.Sound); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ari.Sound)
		}
	}

	return r0
}

// StoredRecording provides a mock function with given fields:
func (_m *Client) StoredRecording() ari.StoredRecording {
	ret := _m.Called()

	var r0 ari.StoredRecording
	if rf, ok := ret.Get(0).(func() ari.StoredRecording); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ari.StoredRecording)
		}
	}

	return r0
}

// TextMessage provides a mock function with given fields:
func (_m *Client) TextMessage() ari.TextMessage {
	ret := _m.Called()

	var r0 ari.TextMessage
	if rf, ok := ret.Get(0).(func() ari.TextMessage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ari.TextMessage)
		}
	}

	return r0
}
